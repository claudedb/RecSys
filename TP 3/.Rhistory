#Calcul de l'Estimation du vote basé sur les plus proches voisins
ecart=t(t(m.estim)-colMeans(m.estim,na.rm=T))
ecart.mat=as.matrix(ecart)
terme=t(t(ecart.mat)*cosinus.q2.VC)
#On prédit même pour ceux ayant déjà un vote pour l'article
estimation=avg.startrek+facteur.k*rowSums(terme,na.rm=T)
#On donne une valeur manquante aux users qui n'ont pas de votes communs avec les 20 plus proches voisins du film actuel
estimation[which(rowSums(m.estim,na.rm=T)==0)]=NA
doc.id.q2<-paste("X",doc.id.q1,sep="")
vecteur.q2<-m[,doc.id.q2]
positions.votes.communs<-(m[,doc.id.q2]*m)>0
votes.communs<-(colSums((m[,doc.id.q2]*m)>0,na.rm=T))
k<-vecteur.q2%*%m
k<-vecteur.q2%*%as.matrix(m)
m.clean<-as.matrix(m)
m.clean[!positions.votes.communs]<-NA
vecteur.q2.clean<-vecteur.q2
vecteur.q2.clean<-matrix(vecteur.q2.clean,nrow=dim(m)[1],ncol=dim(m)[2])
vecteur.q2.clean<-as(vecteur.q2.clean, "dgCMatrix")
vecteur.q2.clean[!positions.votes.communs]=NA
n=sqrt(colSums(m.clean^2,na.rm=T))
d=sqrt(colSums(vecteur.q2.clean^2,na.rm=T))
cosinus.q2<-k/(n*d)
cosinus.q2<-as.vector(cosinus.q2)
cosinus.q2[is.nan(cosinus.q2)]<-0
cosinus.q2.VC<-cosinus.q2
distance.ii<-sqrt(colSums((m.clean-vecteur.q3)^2,na.rm=T))/votes.communs
distance.ii<-sqrt(colSums((m.clean-vecteur.q2)^2,na.rm=T))/votes.communs
distance.ii[votes.communs<5]<-NA
distance.top20.ii<-min.nindex(distance.ii,21)
distance.top20.ii<-distance.top20.ii[distance.top20.ii!=q2.id]
cosinus.q2<-cosinus.q2[distance.top20.ii]
cosinus.q2.VC=(pmax(votes.communs[distance.top20.ii],5)/5)*cosinus.q2[distance.top20.ii]
facteur.k<-1/sum(abs(cosinus.q2.VC),na.rm=T)
avg.article<-sum(m[,doc.id.q2])/sum(m[,doc.id.q2]>0)
m.estim<-as.matrix(m)
m.estim[m.estim==0]<-NA
m.estim<-m.estim[,distance.top20.ii]
ecart=t(t(m.estim)-colMeans(m.estim,na.rm=T))
ecart.mat=as.matrix(ecart)
terme=t(t(ecart.mat)*cosinus.q2.VC)
estimation=avg.article+facteur.k*rowSums(terme,na.rm=T)
estimation[which(rowSums(m.estim,na.rm=T)==0)]=NA
estimation
cosinus.q2
cosinus.q2<-cosinus.vm(vecteur.q2,m)
cosinus.vm <- function(v,m) {
n <- sqrt(colSums(m^2)); (v %*% m)/(n * sqrt(sum(v^2)))
return(n)
}
cosinus.q2<-cosinus.vm(vecteur.q2,m)
cosinus.q2<-cosinus.vm(vecteur.q2,as.matrix(m))
recommendations.ii<-cosinus.q2[order(-cosinus.q2)][1:10]
colnames(cosinus.q2)
cosinus.q2
colnames(recommendations.ii)
recommendations.ii<-cosinus.q2[order(-cosinus.q2)][1:10]
rownames(recommendations.ii)
recommendations.ii
recommendations.ii[1,]
colnames(recommendations.ii)
colnames(data.frame(recommendations.ii))
data.frame(recommendations.ii)
rownames(data.frame(recommendations.ii))
colnames(recommendations.RR)
colnames(recommendations.references)
source('~/GitHub/RecSys/TP 3/TP3.R', echo=TRUE)
g2
source('~/GitHub/RecSys/TP 3/TP3.R', echo=TRUE)
j.test
!j.test
set.seed(55)
j<-c(m>0)
j.test<-j
table(j.test,useNA='alsways')
table(j.test,useNA='always')
j
set.seed(55)
j<-c(m.NA>0)
j.test<-j
table(j.test,useNA='always')
j
set.seed(55)
j<-c(m.NA!=NA)
j<-c(!is.na(m.NA))
j.test<-j
table(j.test,useNA='always')
table(as.vector(j.test),useNA='always')
j<-c(!is.na(m.NA))
j.test<-j
j.test[sample(length(j),.8*length(j))]<-FALSE
j.train<-!j.test
j.test
j.test[1,0]
j.test[1,]
j.test[1]
j.test[2]
dim(j.test)
length(j.test)
length(j)
j
j[,2]
j[,1]
j[1,]
m>0
c(m>0)
j<-m>0
j.test<-j
j.test[sample(length(j),.8*length(j))]<-FALSE
j.train<-!j.test
j.test
j.train
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-NA
m.test[!j.test]<-NA
sum(m.train)
sum(m.train,na.rm=TRUE)
sum(m.test,na.rm=TRUE)
moy.row.train<-rowSums(m.train,na.rm=TRUE)/rowSums(m>0,na.rm = TRUE)
m.norm.q6<-m.train-moy.row.train
m.norm.q6[is.na(m.norm.q6)]<-0
m.norm.q6<-Matrix(m.norm.q6, sparse=TRUE)
SVD.q6<-svd(m.norm.q6)
S.q6<-SVD.q6$d
S.q6<-diag(S.q6)
U.q6<-SVD.q6$u
V.q6<-SVD.q6$v
m.moy.q6<-m.train
m.moy.q6[]<-0
m.moy.q6<-sweep(m.moy.q6,1,moy.row.train,'+')
dim.vector.q6<-seq(from = 10, to = nrow(m), by =50)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
for(i in RMSE.q6$dimension)
{
print(i)
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.q6<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]<-sqrt(mean(as.matrix((m.test[!j.train]-m.pred.q6[!j.train])^2),
na.rm=TRUE))
RMSE.q6$MAE[which(RMSE.q6$dimension==i)]<-mean(as.matrix(abs(m.test[!j.train]-m.pred.q6[!j.train])),
na.rm=TRUE)
}
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2
dim.vector.q6<-seq(from = 2, to = 250, by =50)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
for(i in RMSE.q6$dimension)
{
print(i)
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.q6<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]<-sqrt(mean(as.matrix((m.test[!j.train]-m.pred.q6[!j.train])^2),
na.rm=TRUE))
RMSE.q6$MAE[which(RMSE.q6$dimension==i)]<-mean(as.matrix(abs(m.test[!j.train]-m.pred.q6[!j.train])),
na.rm=TRUE)
}
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2
dim.vector.q6<-seq(from = 2, to = 250, by =10)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
for(i in RMSE.q6$dimension)
{
print(i)
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.q6<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]<-sqrt(mean(as.matrix((m.test[!j.train]-m.pred.q6[!j.train])^2),
na.rm=TRUE))
RMSE.q6$MAE[which(RMSE.q6$dimension==i)]<-mean(as.matrix(abs(m.test[!j.train]-m.pred.q6[!j.train])),
na.rm=TRUE)
}
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2
dim.vector.q6<-seq(from = 2, to = 100, by =1)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
for(i in RMSE.q6$dimension)
{
print(i)
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.q6<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]<-sqrt(mean(as.matrix((m.test[!j.train]-m.pred.q6[!j.train])^2),
na.rm=TRUE))
RMSE.q6$MAE[which(RMSE.q6$dimension==i)]<-mean(as.matrix(abs(m.test[!j.train]-m.pred.q6[!j.train])),
na.rm=TRUE)
}
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2
MAE.baseline<-mean(as.matrix(abs(m.NA-m.baseline)),na.rm=TRUE)
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
+geom_hline(yintercept = RMSE.baseline,color='GREEN',linetype=2 )+
geom_hline(yintercept=MAE.baseline,color='BLACK',linetype=2)+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
geom_hline(yintercept = RMSE.baseline,color='GREEN',linetype=2 )+
geom_hline(yintercept=MAE.baseline,color='BLACK',linetype=2)+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2
seed<-c(55,75,95,105,222)
n_fold<-length(seed)
for(k in seed){
set.seed(k)
j<-m>0
j.test<-j
#table(as.vector(j.test),useNA='always')
j.test[sample(length(j),.85*length(j))]<-FALSE
#table(j.test,useNA='always')
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-NA
m.test[!j.test]<-NA
moy.row.train<-rowSums(m.train,na.rm=TRUE)/rowSums(m>0,na.rm = TRUE)
m.norm.q6<-m.train-moy.row.train
m.norm.q6[is.na(m.norm.q6)]<-0
m.norm.q6<-Matrix(m.norm.q6, sparse=TRUE)
SVD.q6<-svd(m.norm.q6)
S.q6<-SVD.q6$d
S.q6<-diag(S.q6)
U.q6<-SVD.q6$u
V.q6<-SVD.q6$v
m.moy.q6<-m.train
m.moy.q6[]<-0
m.moy.q6<-sweep(m.moy.q6,1,moy.row.train,'+')
dim.vector.q6<-seq(from = 2, to = 100, by =1)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
for(i in RMSE.q6$dimension)
{
print(i)
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.q6<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]<-RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]+
(sqrt(mean(as.matrix((m.test[!j.train]-m.pred.q6[!j.train])^2),
na.rm=TRUE)))/n_fold
RMSE.q6$MAE[which(RMSE.q6$dimension==i)]<-RMSE.q6$MAE[which(RMSE.q6$dimension==i)]+
(mean(as.matrix(abs(m.test[!j.train]-m.pred.q6[!j.train])),
na.rm=TRUE))/n_fold
}
}
seed<-c(55,75,95,105,222)
n_fold<-length(seed)
suppressWarnings(as.numeric("test"))
for(k in seed){
set.seed(k)
j<-m>0
j.test<-j
#table(as.vector(j.test),useNA='always')
j.test[sample(length(j),.85*length(j))]<-FALSE
#table(j.test,useNA='always')
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-NA
m.test[!j.test]<-NA
moy.row.train<-rowSums(m.train,na.rm=TRUE)/rowSums(m>0,na.rm = TRUE)
m.norm.q6<-m.train-moy.row.train
m.norm.q6[is.na(m.norm.q6)]<-0
m.norm.q6<-Matrix(m.norm.q6, sparse=TRUE)
SVD.q6<-svd(m.norm.q6)
S.q6<-SVD.q6$d
S.q6<-diag(S.q6)
U.q6<-SVD.q6$u
V.q6<-SVD.q6$v
m.moy.q6<-m.train
m.moy.q6[]<-0
m.moy.q6<-sweep(m.moy.q6,1,moy.row.train,'+')
dim.vector.q6<-seq(from = 2, to = 100, by =1)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
for(i in RMSE.q6$dimension)
{
print(i)
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.q6<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]<-RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]+
(sqrt(mean(as.matrix((m.test[!j.train]-m.pred.q6[!j.train])^2),
na.rm=TRUE)))/n_fold
RMSE.q6$MAE[which(RMSE.q6$dimension==i)]<-RMSE.q6$MAE[which(RMSE.q6$dimension==i)]+
(mean(as.matrix(abs(m.test[!j.train]-m.pred.q6[!j.train])),
na.rm=TRUE))/n_fold
}
}
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
geom_hline(yintercept = RMSE.baseline,color='GREEN',linetype=2 )+
geom_hline(yintercept=MAE.baseline,color='BLACK',linetype=2)+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2
seed<-c(55,75,95,105,222)
n_fold<-length(seed)
suppressWarnings(as.numeric("test"))
dim.vector.q6<-seq(from = 2, to = 100, by =1)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
for(k in seed){
set.seed(k)
j<-m>0
j.test<-j
#table(as.vector(j.test),useNA='always')
j.test[sample(length(j),.85*length(j))]<-FALSE
#table(j.test,useNA='always')
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-NA
m.test[!j.test]<-NA
moy.row.train<-rowSums(m.train,na.rm=TRUE)/rowSums(m>0,na.rm = TRUE)
m.norm.q6<-m.train-moy.row.train
m.norm.q6[is.na(m.norm.q6)]<-0
m.norm.q6<-Matrix(m.norm.q6, sparse=TRUE)
SVD.q6<-svd(m.norm.q6)
S.q6<-SVD.q6$d
S.q6<-diag(S.q6)
U.q6<-SVD.q6$u
V.q6<-SVD.q6$v
m.moy.q6<-m.train
m.moy.q6[]<-0
m.moy.q6<-sweep(m.moy.q6,1,moy.row.train,'+')
for(i in RMSE.q6$dimension)
{
print(i)
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.q6<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]<-RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]+
(sqrt(mean(as.matrix((m.test[!j.train]-m.pred.q6[!j.train])^2),
na.rm=TRUE)))/n_fold
RMSE.q6$MAE[which(RMSE.q6$dimension==i)]<-RMSE.q6$MAE[which(RMSE.q6$dimension==i)]+
(mean(as.matrix(abs(m.test[!j.train]-m.pred.q6[!j.train])),
na.rm=TRUE))/n_fold
}
}
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
geom_hline(yintercept = RMSE.baseline,color='GREEN',linetype=2 )+
geom_hline(yintercept=MAE.baseline,color='BLACK',linetype=2)+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2
View(RMSE.q6)
source('~/GitHub/RecSys/TP 3/TP3.R', echo=TRUE)
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"))
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=('BLUE','ORANGE'))
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('BLUE','ORANGE'))
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE))+
geom_point(aes(y=MAE))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('BLUE','ORANGE'))
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE),color='Green')+
geom_point(aes(y=MAE))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('BLUE','ORANGE'))
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE),color='Green')+
geom_point(aes(y=MAE))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('Green','ORANGE'))
g2
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE),color='Green')+
geom_point(aes(y=MAE),color='Black')+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('Green','ORANGE'))
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE),color='Green')+
geom_point(aes(y=MAE),color='Black')+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('Green','Black'))
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='Green'))+
geom_point(aes(y=MAE,color='Black'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('Green','Black'))
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='Green'))+
geom_point(aes(y=MAE,color='Black'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"))
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='Green'))+
geom_point(aes(y=MAE,color='Black'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='green'))+
geom_point(aes(y=MAE,color='black'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color=2))+
geom_point(aes(y=MAE,color=4))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color=RMSE))+
geom_point(aes(y=MAE,color=MAE))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE))+
geom_point(aes(y=MAE))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")
g2
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE))+
geom_point(aes(y=MAE))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_colour_manual(values=c('black','blue'))
g2
x<-6
x<-+3
x
x<-=+3
inc(x)<-3
source('~/GitHub/RecSys/TP 3/TP3.R', echo=TRUE)
g2
()
suppressMessages()
suppressMessages(<sparse>[ <logic> ] : .M.sub.i.logical() maybe inefficient)
suppressMessages('<sparse>[ <logic> ] : .M.sub.i.logical() maybe inefficient')
source('~/GitHub/RecSys/TP 3/TP3.R', echo=TRUE)
g
g2
