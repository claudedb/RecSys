erreur.quadratique<-mean(sqrt((m.NA-m.baseline)^2),na.rm=TRUE)
erreur.quadratique<-mean(as.matrix(sqrt((m.NA-m.baseline)^2)),na.rm=TRUE)
erreur.quadratique<-sqrt(sum((m.NA-m.baseline)^2,na.rm=TRUE)/sum(m!=0))
erreur.quadratique<-mean((m.NA-m.baseline)^2,na.rm=TRUE)
erreur.quadratique<-mean(as.matrix((m.NA-m.baseline)^2),na.rm=TRUE)
erreur.quadratique<-sqrt(mean(as.matrix((m.NA-m.baseline)^2),na.rm=TRUE))
source('~/GitHub/RecSys/TP 3/TP3.R', echo=TRUE)
m.norm<-m.NA-moy.row
m.norm<-sparseMatrix(m.norm)
m.norm<-Matrix(m.norm, sparse = TRUE)
m.norm
m.norm<-m.NA-moy.row
m.norm[is.na(m.norm)]<-0
m.norm<-Matrix(m.norm, sparse=TRUE)
m.norm
mSVD<-SVD(m.norm)
mSVD<-svd(m.norm)
mSVD$d
source('~/GitHub/RecSys/TP 3/TP3.R', echo=TRUE)
S<-diag(S)
S<-SVD$d
S<-diag(S)
S
S<-SVD$d
S<-diag(S,length(S))
S
S<-SVD$d
S<-diag(S)
S<-SVD$d
sum(diag(S)-diag(S,length(S)))
S<-[1:10,1:10]
S<-[1:10,1:10]
S10<-S[1:10,1:10]
S<-SVD$d
S<-diag(S)
U<-SVD$u
V<-SVD$v
S10<-S[1:10,1:10]
m.moy2<-m[]
m.moy2<-m
m.moy2<-0
m.moy2<-m
m.moy2[]<-0
m.moy2<-sweep(m.moy2,moy.row,1,'+')
m.moy2<-sweep(m.moy2,1,moy.row'+')
m.moy2<-sweep(m.moy2,1,moy.row,'+')
dim(m)
dim(m.moy2)
Cpred<-m.moy2+(U%*%t(S10))%*%S10%*%t(V10)
Cpred<-m.moy2+(U10%*%t(S10))%*%S10%*%t(V10)
S10<-sqrt(S[1:10,1:10])
m.moy2<-m
m.moy2[]<-0
m.moy2<-sweep(m.moy2,1,moy.row,'+')
S10<-sqrt(S[1:10,1:10])
U10<-U[,1:10]
V10<-V[,1:10]
Cpred<-m.moy2+(U10%*%t(S10))%*%S10%*%t(V10)
m.pred.q4<-m.moy2+(U10%*%t(S10))%*%S10%*%t(V10)
RMSE.q4<-sqrt(mean(as.matrix((m.NA-m.pred.q4)^2),na.rm=TRUE))
RMSE.q5<-as.vector(0)
cbind(SMSE.q5,0)
cbind(RMSE.q5,0)
RMSE.q5<-as.vector(0)
c(RMSE.q5,0)
RMSE.q5<-as.vector(0)
for(i in 2:200)
{
Si<-sqrt(S[1:i,1:i])
Ui<-U[,1:i]
Vi<-V[,1:i]
m.pred.i<-m.moy2+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.i<-sqrt(mean(as.matrix((m.NA-m.pred.i)^2),na.rm=TRUE))
RMSE.q5<-c(RMSE.q5,RMSE.i)
}
g<-ggplot(RMSE.q5,2:200)+geom_line()
g<-ggplot(aes(RMSE.q5,2:200))+geom_line()
RMSE.q5<-cbind(RMSE.q5,2:200)
View(RMSE.q5)
RMSE.q5<-[]
RMSE.q5$n.dimension<-2:200
#TP 3 Code
#Par Claude Demers-Bélanger (1534217) et Mikael Perreault (1741869)
# Pre Code ----------------------------------------------------------------
#On utilise ces deux lignes pour charger et vérifier que les packages nécessaires sont bien installés
if(!require("pacman")) install.packages("pacman")
pacman::p_load(Matrix,data.table,tidyr,readr,dplyr,ggplot2)
#setwd('D:/Polytechnique/A2018/SystRec/TP1')
setwd('C:/Users/claudedb/Documents/GitHub/RecSys/TP 3')
# Data Load
u.data<-read.csv('Data/u.data.csv',sep='|')
m <- sparseMatrix(u.data[,1],u.data[,2],x=u.data[,3])
rownames(m) <- paste('u', 1:nrow(m), sep='')
colnames(m) <- paste('i', 1:ncol(m), sep='')
# Question 1 ---------------------------------------------------------------
# Déterminer une baseline pour l'évaluation de la méthode.
# Prenons une méthode ou nous appliquons la moyenne des lignes et des colonnes pour évaluer les notes
moy.col<-colSums(m)/colSums(m!=0)
moy.row<-rowSums(m)/rowSums(m!=0)
m.baseline<-m
m.baseline[]<-0
m.baseline<-sweep(sweep(m.baseline,1,moy.row/2,"+"),2,moy.col/2,"+")
m.NA<-m
m.NA[m.NA==0]<-NA
RMSE.baseline<-sqrt(mean(as.matrix((m.NA-m.baseline)^2),na.rm=TRUE))
# Question 2 --------------------------------------------------------------
# Appliquer la décomposition SVD
m.norm<-m.NA-moy.row
m.norm[is.na(m.norm)]<-0
m.norm<-Matrix(m.norm, sparse=TRUE)
SVD<-svd(m.norm)
S<-SVD$d
S<-diag(S)
U<-SVD$u
V<-SVD$v
# Question 3 --------------------------------------------------------------
# Effectuez l'estimation des votes sur la base de SVD avec 10 dimensions.
m.moy2<-m
m.moy2[]<-0
m.moy2<-sweep(m.moy2,1,moy.row,'+')
S10<-sqrt(S[1:10,1:10])
U10<-U[,1:10]
V10<-V[,1:10]
m.pred.q3<-m.moy2+(U10%*%t(S10))%*%S10%*%t(V10)
# Question 4 --------------------------------------------------------------
#Calculez l'erreur absolue moyenne et l'erreur quadratique moyenne.
RMSE.q4<-sqrt(mean(as.matrix((m.NA-m.pred.q3)^2),na.rm=TRUE))
RMSE.q5$n.dimension<-2:200
RMSE.q5<-data.frame(dimension=integer(),RMSE=double())
RMSE.q5$dimension<-2:200
View(RMSE.q5)
RMSE.q5$dimension[1:199]<-2:200
RMSE.q5<-data.frame(dimension=2:200,RMSE=double())
RMSE.q5<-data.frame(dimension=2:200,RMSE=rep(0,length(2:200)))
View(RMSE.q5)
RMSE.q5<-data.frame(dimension=2:200,RMSE=rep(0,length(2:200)))
RMSE.q5$dimension[1:199]<-2:200
for(i in RMSE.q5$dimension)
{
Si<-sqrt(S[1:i,1:i])
Ui<-U[,1:i]
Vi<-V[,1:i]
m.pred.i<-m.moy2+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.i<-sqrt(mean(as.matrix((m.NA-m.pred.i)^2),na.rm=TRUE))
RMSE.q5$RMSE[which(RMSE.q5$dimension==i)]<-RMSE.i
}
View(RMSE.q5)
ABS.q4<-mean(abs(m.NA-m.pred.q3),na.rm=TRUE)
ABS.q4<-mean(as.matrix(abs(m.NA-m.pred.q3)),na.rm=TRUE)
RMSE.q4<-mean(as.matrix((m.NA-m.pred.q3)^2),na.rm=TRUE)
RMSE.q4<-sqrt(mean(as.matrix((m.NA-m.pred.q3)^2),na.rm=TRUE))
RMSE.q5<-data.frame(dimension=2:200,QUAD=rep(0,length(2:200)),ABS=rep(0,length(2:200)))
RMSE.q5$dimension[1:199]<-2:200
RMSE.q5<-data.frame(dimension=2:200,QUAD=rep(0,length(2:200)),ABS=rep(0,length(2:200)))
RMSE.q5<-data.frame(dimension=2:nrow(m),QUAD=rep(0,length(2:nrow(m))),ABS=rep(0,length(2:nrow(m))))
for(i in RMSE.q5$dimension)
{
Si<-sqrt(S[1:i,1:i])
Ui<-U[,1:i]
Vi<-V[,1:i]
m.pred.i<-m.moy2+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q5$QUAD[which(RMSE.q5$dimension==i)]<-sqrt(mean(as.matrix((m.NA-m.pred.i)^2),na.rm=TRUE))
RMSE.q5$ABS[which(RMSE.q5$dimension==i)]<-mean(as.matrix(abs(m.NA-m.pred.i)),na.rm=TRUE)
}
View(RMSE.q5)
m.moy2
m.moy2[1,]
m.moy2<-m
m.moy2[]<-0
m.moy2<-sweep(m.moy2,2,moy.row,'+')
m.moy2<-m
m.moy2[]<-0
m.moy2<-sweep(m.moy2,1,moy.row,'+')
m.moy2[1,]
moy.rpw
moy.row
dim.vector<-2:20:400
RMSE.q5<-data.frame(dimension=dim.vector,QUAD=rep(0,length(dim.vector)),ABS=rep(0,length(dim.vector)))
for(i in RMSE.q5$dimension)
{
Si<-sqrt(S[1:i,1:i])
Ui<-U[,1:i]
Vi<-V[,1:i]
m.pred.i<-m.moy2+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q5$QUAD[which(RMSE.q5$dimension==i)]<-sqrt(mean(as.matrix((m.NA-m.pred.i)^2),na.rm=TRUE))
RMSE.q5$ABS[which(RMSE.q5$dimension==i)]<-mean(as.matrix(abs(m.NA-m.pred.i)),na.rm=TRUE)
}
dim.vector<-2:20:402
dim.vector<-seq(from = 2, to = 402, by = 20)
RMSE.q5<-data.frame(dimension=dim.vector,QUAD=rep(0,length(dim.vector)),ABS=rep(0,length(dim.vector)))
for(i in RMSE.q5$dimension)
{
Si<-sqrt(S[1:i,1:i])
Ui<-U[,1:i]
Vi<-V[,1:i]
m.pred.i<-m.moy2+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q5$QUAD[which(RMSE.q5$dimension==i)]<-sqrt(mean(as.matrix((m.NA-m.pred.i)^2),na.rm=TRUE))
RMSE.q5$ABS[which(RMSE.q5$dimension==i)]<-mean(as.matrix(abs(m.NA-m.pred.i)),na.rm=TRUE)
}
View(RMSE.q5)
m.moy2
m.moy2[2,]
m.NA<-m
m.NA[m.NA==0]<-NA
RMSE.baseline<-sqrt(mean(as.matrix((m.NA-m.baseline)^2),na.rm=TRUE))
as.matrix(m.NA)[1,]
m.moy2<-m
m.moy2[]<-0
m.moy2<-sweep(m.moy2,1,moy.row,'+')
dim.q3<-20
S10<-sqrt(S[1:dim.q3,1:dim.q3])
U10<-U[,1:dim.q3]
V10<-V[,1:dim.q3]
m.pred.q3<-m.moy2+(U10%*%t(S10))%*%S10%*%t(V10)
ABS.q4<-mean(as.matrix(abs(m.NA-m.pred.q3)),na.rm=TRUE)
RMSE.q4<-sqrt(mean(as.matrix((m.NA-m.pred.q3)^2),na.rm=TRUE))
dim.q3<-100
S10<-sqrt(S[1:dim.q3,1:dim.q3])
U10<-U[,1:dim.q3]
V10<-V[,1:dim.q3]
m.pred.q3<-m.moy2+(U10%*%t(S10))%*%S10%*%t(V10)
ABS.q4<-mean(as.matrix(abs(m.NA-m.pred.q3)),na.rm=TRUE)
RMSE.q4<-sqrt(mean(as.matrix((m.NA-m.pred.q3)^2),na.rm=TRUE))
dim.vector<-seq(from = 2, to = 402, by = 20)
RMSE.q5<-data.frame(dimension=dim.vector,QUAD=rep(0,length(dim.vector)),ABS=rep(0,length(dim.vector)))
for(i in RMSE.q5$dimension)
{
Si<-sqrt(S[1:i,1:i])
Ui<-U[,1:i]
Vi<-V[,1:i]
m.pred.i<-m.moy2+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q5$QUAD[which(RMSE.q5$dimension==i)]<-sqrt(mean(as.matrix((m.NA-m.pred.i)^2),na.rm=TRUE))
RMSE.q5$ABS[which(RMSE.q5$dimension==i)]<-mean(as.matrix(abs(m.NA-m.pred.i)),na.rm=TRUE)
}
View(RMSE.q5)
dim.vector<-seq(from = 10, to = 410, by = 20)
RMSE.q5<-data.frame(dimension=dim.vector,QUAD=rep(0,length(dim.vector)),ABS=rep(0,length(dim.vector)))
for(i in RMSE.q5$dimension)
{
Si<-sqrt(S[1:i,1:i])
Ui<-U[,1:i]
Vi<-V[,1:i]
m.pred.i<-m.moy2+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q5$QUAD[which(RMSE.q5$dimension==i)]<-sqrt(mean(as.matrix((m.NA-m.pred.i)^2),na.rm=TRUE))
RMSE.q5$ABS[which(RMSE.q5$dimension==i)]<-mean(as.matrix(abs(m.NA-m.pred.i)),na.rm=TRUE)
}
View(RMSE.q5)
m.moy2<-m
m.moy2[]<-0
m.moy2<-sweep(m.moy2,1,moy.row,'+')
dim.q3<-10
S10<-sqrt(S[1:dim.q3,1:dim.q3])
U10<-U[,1:dim.q3]
V10<-V[,1:dim.q3]
m.pred.q3<-m.moy2+(U10%*%t(S10))%*%S10%*%t(V10)
ABS.q4<-mean(as.matrix(abs(m.NA-m.pred.q3)),na.rm=TRUE)
RMSE.q4<-sqrt(mean(as.matrix((m.NA-m.pred.q3)^2),na.rm=TRUE))
dim.q3<-10
m.SVD.q3<-svd(m.norm,nu=dim.q3,nv=dim.q3)
S10<-sqrt(diag(m.SVD.q3$d)[1:dim.q3,1:dim.q3])
U10<-m.SVD.q3$u[,1:dim.q3]
V10<-m.SVD.q3$v[,1:dim.q3]
m.pred.q3<-m.moy2+(U10%*%t(S10))%*%S10%*%t(V10)
ABS.q4<-mean(as.matrix(abs(m.NA-m.pred.q3)),na.rm=TRUE)
RMSE.q4<-sqrt(mean(as.matrix((m.NA-m.pred.q3)^2),na.rm=TRUE))
View(RMSE.q5)
S10
U10
source('~/Polymtl/LOG6308/TP3/Essai github.R', echo=TRUE)
source('~/Polymtl/LOG6308/TP3/Essai github.R', echo=TRUE)
source('~/GitHub/RecSys/TP 3/TP3.R', echo=TRUE)
View(RMSE.q5)
dim.vector<-seq(from = 10, to = nrow(m), by = 20)
dim.vector
dim.vector<-seq(from = 10, to = nrow(m), by = 20)
RMSE.q5<-data.frame(dimension=dim.vector,QUAD=rep(0,length(dim.vector)),ABS=rep(0,length(dim.vector)))
for(i in RMSE.q5$dimension)
{
Si<-sqrt(S[1:i,1:i])
Ui<-U[,1:i]
Vi<-V[,1:i]
m.pred.i<-m.moy2+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q5$QUAD[which(RMSE.q5$dimension==i)]<-sqrt(mean(as.matrix((m.NA-m.pred.i)^2),na.rm=TRUE))
RMSE.q5$ABS[which(RMSE.q5$dimension==i)]<-mean(as.matrix(abs(m.NA-m.pred.i)),na.rm=TRUE)
}
g<-ggplot(RMSE.q5,aes(x=dimension))+geom_point(aes(y=QUAD))
g<-ggplot(RMSE.q5,aes(x=dimension))+
geom_point(aes(y=QUAD))
g
dim.vector<-seq(from = 10, to = nrow(m), by = 20)
RMSE.q5<-data.frame(dimension=dim.vector,RMSE=rep(0,length(dim.vector)),MAE=rep(0,length(dim.vector)))
for(i in RMSE.q5$dimension)
{
Si<-sqrt(S[1:i,1:i])
Ui<-U[,1:i]
Vi<-V[,1:i]
m.pred.i<-m.moy2+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q5$RMSE[which(RMSE.q5$dimension==i)]<-sqrt(mean(as.matrix((m.NA-m.pred.i)^2),na.rm=TRUE))
RMSE.q5$MAE[which(RMSE.q5$dimension==i)]<-mean(as.matrix(abs(m.NA-m.pred.i)),na.rm=TRUE)
}
g<-ggplot(RMSE.q5,aes(x=dimension))+
geom_point(aes(y=RMSE),fill()='RED')+
geom_point(aes(y=MAE),fill='BLUE')
g<-ggplot(RMSE.q5,aes(x=dimension))+
geom_point(aes(y=RMSE),fill='RED')+
geom_point(aes(y=MAE),fill='BLUE')
g
g<-ggplot(RMSE.q5,aes(x=dimension))+
geom_point(aes(y=RMSE,fill='RED'))+
geom_point(aes(y=MAE,fill='BLUE'))
g
g<-ggplot(RMSE.q5,aes(x=dimension))+
geom_point(aes(y=RMSE,color='RED'))+
geom_point(aes(y=MAE,color='BLUE'))
g
g<-ggplot(RMSE.q5,aes(x=dimension))+
geom_point(aes(y=RMSE),color='RED')+
geom_point(aes(y=MAE),color='BLUE')
g
g<-ggplot(RMSE.q5,aes(x=dimension))+
geom_point(aes(y=RMSE),color='RED')+
geom_point(aes(y=MAE),color='BLUE')+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE",values=c('RED','BLUE')))
g
g<-ggplot(RMSE.q5,aes(x=dimension))+
geom_point(aes(y=RMSE,color='RED'))+
geom_point(aes(y=MAE,color='BLUE'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE",values=c('RED','BLUE')))
g
g<-ggplot(RMSE.q5,aes(x=dimension))+
geom_point(aes(y=RMSE,color='RED'))+
geom_point(aes(y=MAE,color='BLUE'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('RED','BLUE'))
g
g<-ggplot(RMSE.q5,aes(x=dimension))+
geom_point(aes(y=RMSE,color=variable))+
geom_point(aes(y=MAE,color=variable))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('RED','BLUE'))
g
g<-ggplot(RMSE.q5,aes(x=dimension))+
geom_point(aes(y=RMSE,color='RED'))+
geom_point(aes(y=MAE,color='BLUE'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('RED','BLUE'))
g
dim(S)
test<-data.frame(ligne1=double(),ligne2=integer())
View(test)
rbind(test,c(2,2))
data.frame(rbind(test,c(2,2)))
rbind(test,1=c(2,2))
test[1]=c(2,2)
test
rbind(test,data.frame(c(2,2)))
test<-rbind(test,data.frame(c(2,2)))
test
moy.row.train<-rowSums(m.train)/rowSums(m>0)
source('~/GitHub/RecSys/TP 3/TP3.R', echo=TRUE)
source('~/GitHub/RecSys/TP 3/TP3.R', echo=TRUE)
View(RMSE.q6)
source('~/Polymtl/LOG6308/TP3/Essai github.R', echo=TRUE)
cofilter_errors
colfilter_errors
source('~/GitHub/RecSys/TP 3/TP3.R', echo=TRUE)
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2
g
m.norm.q6[1,]
set.seed(55)
j<-c(m>0)
j.test<-i
j.test[sample(length(j),.8*length(j))]<-FALSE
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-NA
m.test[!j.test]<-NA
moy.row.train<-rowSums(m.train)/rowSums(m>0)
m.norm.q6<-m.train-moy.row.train
m.norm.q6[is.na(m.norm.q6)]<-0
m.norm.q6<-Matrix(m.norm.q6, sparse=TRUE)
m.norm.q6[1,]
m.train
moy.row.train<-rowSums(m.train,na.rm=TRUE)/rowSums(m>0,na.rm = TRUE)
moy.row.train
m.norm.q6<-m.train-moy.row.train
m.norm.q6
m.norm.q6[1,]
m.norm.q6[is.na(m.norm.q6)]<-0
m.norm.q6<-Matrix(m.norm.q6, sparse=TRUE)
m.norm.q6
SVD.q6<-svd(m.norm.q6)
S.q6<-SVD.q6$d
S.q6<-diag(S.q6)
U.q6<-SVD.q6$u
V.q6<-SVD.q6$v
m.moy.q6<-m.train
m.moy.q6[]<-0
m.moy.q6<-sweep(m.moy.q6,1,moy.row.train,'+')
dim.vector.q6<-seq(from = 10, to = nrow(m), by = 20)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
for(i in RMSE.q6$dimension)
dim.vector.q6<-seq(from = 10, to = nrow(m), by =50)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
for(i in RMSE.q6$dimension)
{
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.i<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q5$dimension==i)]<-sqrt(mean(as.matrix((m.test-m.pred.i)^2),
na.rm=TRUE))
RMSE.q6$MAE[which(RMSE.q5$dimension==i)]<-mean(as.matrix(abs(m.test-m.pred.i)),
na.rm=TRUE)
}
dim.vector.q6<-seq(from = 10, to = nrow(m), by =50)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
for(i in RMSE.q6$dimension)
{
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.i<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q5$dimension==i)]<-sqrt(mean(as.matrix((m.test-m.pred.i)^2),
na.rm=TRUE))
RMSE.q6$MAE[which(RMSE.q5$dimension==i)]<-mean(as.matrix(abs(m.test-m.pred.i)),
na.rm=TRUE)
}
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2
dim.vector.q6<-seq(from = 10, to = nrow(m), by =50)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
RMSE.q6
for(i in RMSE.q6$dimension)
{
print(i)
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.i<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q5$dimension==i)]<-sqrt(mean(as.matrix((m.test-m.pred.i)^2),
na.rm=TRUE))
RMSE.q6$MAE[which(RMSE.q5$dimension==i)]<-mean(as.matrix(abs(m.test-m.pred.i)),
na.rm=TRUE)
}
RMSE.q6$dimension
for(i in RMSE.q6$dimension)
{
print(i)
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.i<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]<-sqrt(mean(as.matrix((m.test-m.pred.i)^2),
na.rm=TRUE))
RMSE.q6$MAE[which(RMSE.q6$dimension==i)]<-mean(as.matrix(abs(m.test-m.pred.i)),
na.rm=TRUE)
}
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2
m.test
dim.vector.q6<-seq(from = 10, to = nrow(m), by =50)
RMSE.q6<-data.frame(dimension=dim.vector.q6,RMSE=rep(0,length(dim.vector.q6)),
MAE=rep(0,length(dim.vector.q6)))
for(i in RMSE.q6$dimension)
{
print(i)
Si<-sqrt(S.q6[1:i,1:i])
Ui<-U.q6[,1:i]
Vi<-V.q6[,1:i]
m.pred.q6<-m.moy.q6+(Ui%*%t(Si))%*%Si%*%t(Vi)
RMSE.q6$RMSE[which(RMSE.q6$dimension==i)]<-sqrt(mean(as.matrix((m.test[!j.train]-m.pred.q6[!j.train])^2),
na.rm=TRUE))
RMSE.q6$MAE[which(RMSE.q6$dimension==i)]<-mean(as.matrix(abs(m.test[!j.train]-m.pred.q6[!j.train])),
na.rm=TRUE)
}
g2<-ggplot(RMSE.q6,aes(x=dimension))+
geom_point(aes(y=RMSE,color='GREEN'))+
geom_point(aes(y=MAE,color='BLACK'))+
labs(title='Evolution du RMSE et MAE en fonction du nombre de dimensions',
x='Dimensions',y='Erreur',color="Type d'erreur")+
scale_color_manual(labels=c('RMSE',"MAE"),values=c('GREEN','BLACK'))
g2
g2
