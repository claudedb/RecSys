source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
sums.2<-colSums(t(m)^2)
dist.eucl<-sweep(sweep(-2*t(m) %*% m,2,sums.2,"+"),1,sums.2,"+")
dist.eucl<-sweep(sweep(-2*t(m) %*% m,1,sums.2,"+"),2,sums.2,"+")
dim(t(m) %*% m)
sums.2<-colSums(t(m)^2)
sums.2<-colSums(m^2)
dist.eucl<-sweep(sweep(-2*t(m) %*% m,2,sums.2,"+"),1,sums.2,"+")
neighbors<-t(apply(dist.eucl,1,max.nindex))
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
m.centre[neighbors[2,],]
dim(m.centre[neighbors[2,],])
dim(cosinus.uu[2,])
length(cosinus.uu[2,])
for (i in 1 : nrow(m))
{
estimation[i,] <- as.vector(kappa[i] *
(cosinus.uu[i,neighbors[i,]] %*% m.centre[neighbors[i,],]))
estimation[i,] <- avg.use[i] + estimation[i,]
estimation[estimation>5] <- 5
}
for (i in 1 : nrow(m))
{
estimation[i,] <- as.vector(kappa[i] *
(cosinus.uu[i,neighbors[i,]] %*% m.centre[neighbors[i,],]))
estimation[i,] <- avg.user[i] + estimation[i,]
estimation[estimation>5] <- 5
}
for (i in 1 : nrow(m))
{
estimation[i,] <- as.vector(kappa[i] *
(cosinus.uu[i,neighbors.uu[i,]] %*% m.centre[neighbors.uu[i,],]))
estimation[i,] <- avg.user[i] + estimation[i,]
estimation[estimation>5] <- 5
}
m.estimation <- m.NA
m.estimation[which(is.na(m.NA))] <- estimation[which(is.na(m.NA))]
RMSE <- sqrt(mean(as.matrix((m.NA-m.estimation)^2),na.rm=TRUE))
m.estimation <- m.NA
m.estimation[which(is.na(m.NA))] <- m.estimation[which(is.na(m.NA))] + estimation[which(is.na(m.NA))]
RMSE <- sqrt(mean(as.matrix((m.NA-m.estimation)^2),na.rm=TRUE))
View(estimation)
estimation <- m
estimation[] <- NA
for (i in 1 : nrow(m))
{
estimation[i,] <- as.vector(kappa[i] *
(cosinus.uu[i,neighbors.uu[i,]] %*% m.centre[neighbors.uu[i,],]))
estimation[i,] <- avg.user[i] + estimation[i,]
estimation[estimation>5] <- 5
}
avg.user <- rowMeans(m.NA,na.rm=TRUE)
kappa <- 1/rowSums(neighbors.uu)
m.centre <- m.NA - avg.user
estimation <- m
estimation[] <- NA
for (i in 1 : nrow(m))
{
estimation[i,] <- as.vector(kappa[i] *
(cosinus.uu[i,neighbors.uu[i,]] %*% m.centre[neighbors.uu[i,],]))
estimation[i,] <- avg.user[i] + estimation[i,]
estimation[estimation>5] <- 5
}
m.estimation <- m.NA
m.estimation[which(is.na(m.NA))] <- m.estimation[which(is.na(m.NA))] + estimation[which(is.na(m.NA))]
View(m.estimation)
View(m.NA)
sum(is.na(m))
View(m)
View(users)
View(items)
RMSE <- sqrt(mean(as.matrix((m.NA-estimation)^2),na.rm=TRUE))
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
S <-sqrt(diag(SVD.m$d))
set.seed(k)
j<-m>0
set.seed(10)
j<-m>0
j.test<-j
j.test[sample(length(j),0.9*length(j))]<-FALSE
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-NA
m.test[!j.test]<-NA
moy.row.train<-rowSums(m.train,na.rm=TRUE)/rowSums(m>0,na.rm = TRUE)
m.norm<-m.train-moy.row.train
m.norm[is.na(m.norm)]<-0
m.norm<-Matrix(m.norm, sparse=TRUE)
SVD.m<-svd(m.norm)
m.moy<-m.train
m.moy[]<-0
m.moy<-sweep(m.moy,1,moy.row.train,'+')
S <-sqrt(diag(SVD.m$d))
dim.vector<-seq(from = 2, to = nrow(m.train), by = 1)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
S[1:2,1:2]
set.seed(10)
j<-m>0
j.test<-j
j.test[sample(length(j),0.9*length(j))]<-FALSE
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-NA
m.test[!j.test]<-NA
moy.row.train<-rowSums(m.train,na.rm=TRUE)/rowSums(m>0,na.rm = TRUE)
m.norm<-m.train-moy.row.train
m.norm[is.na(m.norm)]<-0
m.norm<-Matrix(m.norm, sparse=TRUE)
SVD.m<-svd(m.norm)
m.moy<-m.train
m.moy[]<-0
m.moy<-sweep(m.moy,1,moy.row.train,'+')
i=2;
S <-sqrt(diag(SVD.m$d))
Si <- S[1:i,1:i]
Ui<-SVD.m$u[,1:i]
Vi<-SVD.m$v[,1:i]
m.pred.i<-m.moy+(Ui%*%t(Si))%*%Si%*%t(Vi)
m.pred.i[m.pred.i<0]=0
m.pred.i[m.pred.i>5]=5
RMSE<-sqrt(mean(as.matrix((m.NA-m.pred.i)^2),na.rm=TRUE))
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
View(cv.result)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
View(cv.result)
View(cv.result)
RMSE.SVD <- rowMeans(cv.result)
RMSE.uu <- sapply(seed,cross.validation.uu)
View(m.test)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
k<-10
set.seed(k)
j<-m>0
j.test<-j
j.test[sample(length(j),0.9*length(j))]<-FALSE
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-NA
m.test[!j.test]<-NA
votes.uu <- t(m.train)
cosinus.uu <- cosinus.vm(votes.uu,votes.uu)
k<-10
set.seed(k)
j<-m>0
j.test<-j
j.test[sample(length(j),0.9*length(j))]<-FALSE
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-0
m.test[!j.test]<-NA
votes.uu <- t(m.train)
cosinus.uu <- cosinus.vm(votes.uu,votes.uu)
neighbors.uu <- t(apply(cosinus.uu,1,max.nindex))
avg.user <- rowMeans(m.train,na.rm=TRUE)
kappa <- 1/rowSums(neighbors.uu)
m.centre <- m.train - avg.user
estimation <- m.train
estimation[] <- NA
for (i in 1 : nrow(m.train))
{
estimation[i,] <- as.vector(kappa[i] *
(cosinus.uu[i,neighbors.uu[i,]] %*% m.centre[neighbors.uu[i,],]))
estimation[i,] <- avg.user[i] + estimation[i,]
estimation[estimation>5] <- 5
}
RMSE <- sqrt(mean(as.matrix((m.test-estimation)^2),na.rm=TRUE))
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
k<-10
set.seed(k)
j<-m>0
j.test<-j
j.test[sample(length(j),0.9*length(j))]<-FALSE
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-0
m.test[!j.test]<-NA
votes.uu <- t(m.train)
cosinus.uu <- cosinus.vm(votes.uu,votes.uu)
neighbors.uu <- t(apply(cosinus.uu,1,max.nindex))
avg.user <- rowMeans(m.train,na.rm=TRUE)
kappa <- 1/rowSums(neighbors.uu)
k<-10
set.seed(k)
j<-m>0
j.test<-j
j.test[sample(length(j),0.9*length(j))]<-FALSE
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-0
m.test[!j.test]<-NA
m.NA <-m.train
m.NA[m.NA ==0 ]<- NA
votes.uu <- t(m.train)
cosinus.uu <- cosinus.vm(votes.uu,votes.uu)
neighbors.uu <- t(apply(cosinus.uu,1,max.nindex))
avg.user <- rowMeans(m.NA,na.rm=TRUE)
kappa <- 1/rowSums(neighbors.uu)
m.centre <- m.NA - avg.user
m.centre[is.na(m.centre)]<-0
estimation <- m.train
estimation[] <- NA
for (i in 1 : nrow(m.train))
{
estimation[i,] <- as.vector(kappa[i] *
(cosinus.uu[i,neighbors.uu[i,]] %*% m.centre[neighbors.uu[i,],]))
estimation[i,] <- avg.user[i] + estimation[i,]
estimation[estimation>5] <- 5
}
RMSE <- sqrt(mean(as.matrix((m.test-estimation)^2),na.rm=TRUE))
return(RMSE)
RMSE.uu <- sapply(seed,cross.validation.uu)
RMSE.uu <- sapply(10,cross.validation.uu)
cross.validation.uu(10)
cross.validation.uu <- function(k)
{
#k<-10
set.seed(k)
j<-m>0
j.test<-j
j.test[sample(length(j),0.9*length(j))]<-FALSE
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-0
m.test[!j.test]<-NA
m.NA <-m.train
m.NA[m.NA ==0 ]<- NA
votes.uu <- t(m.train)
cosinus.uu <- cosinus.vm(votes.uu,votes.uu)
neighbors.uu <- t(apply(cosinus.uu,1,max.nindex))
avg.user <- rowMeans(m.NA,na.rm=TRUE)
kappa <- 1/rowSums(neighbors.uu)
m.centre <- m.NA - avg.user
m.centre[is.na(m.centre)]<-0
estimation <- m.train
estimation[] <- NA
for (i in 1 : nrow(m.train))
{
estimation[i,] <- as.vector(kappa[i] *
(cosinus.uu[i,neighbors.uu[i,]] %*% m.centre[neighbors.uu[i,],]))
estimation[i,] <- avg.user[i] + estimation[i,]
estimation[estimation>5] <- 5
}
RMSE <- sqrt(mean(as.matrix((m.test-estimation)^2),na.rm=TRUE))
return(RMSE)
}
cross.validation.uu(10)
set.seed(k)
j<-m>0
j.test<-j
j.test[sample(length(j),0.9*length(j))]<-FALSE
j.train<-!j.test
m.test<-m.NA
m.train<-m.NA
m.train[j.test]<-0
m.test[!j.test]<-NA
m.NA <-m.train
m.NA[m.NA ==0 ]<- NA
votes.uu <- t(m.train)
cosinus.uu <- cosinus.vm(votes.uu,votes.uu)
neighbors.uu <- t(apply(cosinus.uu,1,max.nindex))
avg.user <- rowMeans(m.NA,na.rm=TRUE)
kappa <- 1/rowSums(neighbors.uu)
m.centre <- m.NA - avg.user
m.centre[is.na(m.centre)]<-0
estimation <- m.train
estimation[] <- NA
for (i in 1 : nrow(m.train))
{
estimation[i,] <- as.vector(kappa[i] *
(cosinus.uu[i,neighbors.uu[i,]] %*% m.centre[neighbors.uu[i,],]))
estimation[i,] <- avg.user[i] + estimation[i,]
estimation[estimation>5] <- 5
}
RMSE <- sqrt(mean(as.matrix((m.test-estimation)^2),na.rm=TRUE))
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
RMSE.SVD
min(RMSE.SVD)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
RMSE.SVD
SVD.results <- data.frame(dimension = dim.vector, RMSE = RMSE.SVD)
library(ggplot2)
g <- ggplot(SVD.results,aes(dimension,RMSE))+geom_line()
g
View(SVD.results)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
RMSE.ii
comparaison.methode <- data.frame(seed = seed, uu = RMSE.uu, ii = RMSE.ii, SVD = cv.rsult[16,])
comparaison.methode <- data.frame(seed = seed, uu = RMSE.uu, ii = RMSE.ii, SVD = cv.result[16,])
View(comparaison.methode)
View(items)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
View(comparaison.methode)
View(SVD.results)
source('~/GitHub/RecSys/Exercices/Pratique_Examen.R', echo=TRUE)
